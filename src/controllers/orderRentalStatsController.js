const OrderRentalStats = require("../models/OrderRentalStats");

// LÆ°u thá»‘ng kÃª Ä‘Æ¡n hÃ ng vÃ  Ä‘Æ¡n thuÃª theo tuáº§n hoáº·c thÃ¡ng
const saveOrderRentalStats = async (req, res) => {
  const { ordersByDay, rentalsByDay, period, year, week, month } = req.body;

  // Kiá»ƒm tra Ä‘á»™ dÃ i máº£ng
  if (ordersByDay.length !== 7 || rentalsByDay.length !== 7) {
    return res.status(400).json({
      message:
        "Máº£ng ordersByDay vÃ  rentalsByDay pháº£i cÃ³ Ä‘Ãºng 7 pháº§n tá»­ cho má»—i ngÃ y trong tuáº§n",
    });
  }

  try {
    const existingData = await OrderRentalStats.findOne({
      year,
      week,
      month,
    });

    if (existingData) {
      return res.status(400).json({
        message: "Dá»¯ liá»‡u cho tuáº§n/thÃ¡ng nÃ y Ä‘Ã£ tá»“n táº¡i",
        data: existingData,
      });
    }

    const newOrderRentalStats = new OrderRentalStats({
      period,
      year,
      week,
      month,
      ordersByDay,
      rentalsByDay,
    });

    await newOrderRentalStats.save();
    return res.status(201).json({
      message: "Dá»¯ liá»‡u thá»‘ng kÃª Ä‘Ã£ Ä‘Æ°á»£c lÆ°u thÃ nh cÃ´ng",
      data: newOrderRentalStats,
    });
  } catch (error) {
    console.error("Lá»—i khi lÆ°u thá»‘ng kÃª:", error);
    return res.status(500).json({ message: "Lá»—i server", error });
  }
};
// Truy xuáº¥t thá»‘ng kÃª Ä‘Æ¡n hÃ ng vÃ  Ä‘Æ¡n thuÃª theo tuáº§n hoáº·c thÃ¡ng
const getOrderRentalStats = async (req, res) => {
  const { month, week, year } = req.params;

  try {
    const data = await OrderRentalStats.findOne({ month, week, year });

    if (!data) {
      return res.status(404).json({
        message: "KhÃ´ng tÃ¬m tháº¥y dá»¯ liá»‡u thá»‘ng kÃª cho tuáº§n/thÃ¡ng nÃ y",
      });
    }

    return res.status(200).json(data);
  } catch (error) {
    console.error("Lá»—i khi truy váº¥n thá»‘ng kÃª:", error);
    return res.status(500).json({ message: "Lá»—i server", error });
  }
};
const updateOrderRentalStats = async (req, res) => {
  const { ordersByDay, rentalsByDay, month, week, year } = req.body;
  console.log("ðŸš€ ~ updateOrderRentalStats ~ req.body:", req.body);

  try {
    // Kiá»ƒm tra xem dá»¯ liá»‡u cho tuáº§n/thÃ¡ng Ä‘Ã³ Ä‘Ã£ tá»“n táº¡i chÆ°a
    const existingData = await OrderRentalStats.findOne({ month, week, year });
    console.log("ðŸš€ ~ updateOrderRentalStats ~ existingData:", existingData);

    if (!existingData) {
      return res.status(404).json({
        message: "KhÃ´ng tÃ¬m tháº¥y dá»¯ liá»‡u thá»‘ng kÃª cho tuáº§n/thÃ¡ng nÃ y",
      });
    }

    // Cáº­p nháº­t dá»¯ liá»‡u thá»‘ng kÃª
    existingData.ordersByDay = ordersByDay;
    existingData.rentalsByDay = rentalsByDay;

    await existingData.save();

    return res.status(200).json({
      message: "Dá»¯ liá»‡u thá»‘ng kÃª Ä‘Ã£ Ä‘Æ°á»£c cáº­p nháº­t thÃ nh cÃ´ng",
      data: existingData,
    });
  } catch (error) {
    console.error("Lá»—i khi cáº­p nháº­t thá»‘ng kÃª:", error);
    return res.status(500).json({ message: "Lá»—i server", error });
  }
};
const getAllOrderRentalStats = async (req, res) => {
  try {
    const allData = await OrderRentalStats.find(); // Truy váº¥n táº¥t cáº£ dá»¯ liá»‡u tá»« collection

    if (!allData || allData.length === 0) {
      return res.status(404).json({
        message: "KhÃ´ng tÃ¬m tháº¥y dá»¯ liá»‡u thá»‘ng kÃª nÃ o",
      });
    }

    return res.status(200).json(allData);
  } catch (error) {
    console.error("Lá»—i khi láº¥y táº¥t cáº£ dá»¯ liá»‡u thá»‘ng kÃª:", error);
    return res.status(500).json({ message: "Lá»—i server", error });
  }
};
module.exports = {
  getAllOrderRentalStats,
  saveOrderRentalStats,
  getOrderRentalStats,
  updateOrderRentalStats,
};
